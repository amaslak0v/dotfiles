# TODO:
# Research links
#   https://github.com/rothgar/awesome-tmux
#   https://github.com/gpakosz/.tmux/blob/master/.tmux.conf
#   copy/paste  + mouse
#   https://github.com/xamut/tmux-spotify
#   https://github.com/zinic/tmux-cssh
# Change number of tabs after closeing

# Issues:
# Когда отваливается панель в tmux - надо перезагрузить iterm

# ITERM nes shell: tmux new-session -A -s ssh_tmux





######################
###     Global     ###
######################

# Default shell
set -g default-shell /bin/sh
set -g default-command $SHELL

# set -g default-shell /usr/local/bin/fish
set -g default-terminal "xterm-256color"
# Coc vim fix
set-option -sa terminal-overrides ',screen-256color:RGB'

# rename window to reflect current program
setw -g automatic-rename on   
# renumber windows when a window is closed
set -g renumber-windows on    





######################
###     Hotkeys    ###
######################

### Prefix
unbind C-b
set -g prefix `
bind-key C-A send-prefix

# create session
bind C-c new-session

# create window
# bind c new-window -c "#{pane_current_path}" # create new window in the same dir 
bind c new-window -c "#{PWD}" # create window in home dir





######################
###     Panes      ###
######################

# Split panes using | and -
unbind '"'
unbind %
bind _ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Switch panes without prefix: C-*
# bind -n C-h select-pane -L
# bind -n C-l select-pane -R
# bind -n C-k select-pane -U
# bind -n C-j select-pane -D

# Resizing: C-A + L
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Smart pane switching with awareness of Vim splits and fzf.
# See: https://github.com/christoomey/vim-tmux-navigator
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
bind-key -n C-h if-shell "$not_tmux" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$not_tmux" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$not_tmux" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$not_tmux" "send-keys C-l"  "select-pane -R"

# Pane borders colors
set -g pane-active-border-style bg=default,fg=blue
set -g pane-border-style fg=black


######################
###     Windows    ###
######################
unbind n
unbind p
# bind -n C-< previous-window # select previous window
# bind -n C-> next-window     # select next window
bind Tab last-window        # move to last active window

# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i"

# use `prefix` + r to reload tmuxrc
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# command K clear
# For OSX:Iterm go to Keys: and create bind
# CMD+k Action: send text clear \n

# mouse control
set -g mouse on





######################
###      View      ###
######################


# Statusbar position
# set-option -g status-position bottom
# set -g status-right "#(/bin/bash $HOME/.tmux/kube-tmux/kube.tmux 250 red cyan)"



# statusbar
# set -g status-position bottom
# set -g status-justify left
# set -g status-style 'bg=colour18 fg=colour137 dim'
# set -g status-left ''
# set -g status-right '#[fg=colour233,bg=colour19] %d/%m #[fg=colour233,bg=colour8] %H:%M:%S '
# set -g status-right-length 50
# set -g status-left-length 20

# setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
# setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '

# setw -g window-status-style 'fg=colour9 bg=colour18'
# setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'




# Windows indexing | start windows numbering at 1
set -g base-index 1

# rename window to reflect current program
setw -g automatic-rename on   





######################
###    Copy/Log    ###
######################

# Log output to a text file on demand.
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Vimlike copy mode.
unbind [
unbind p
bind p paste-buffer





######################
###     Plugins    ###
######################
#
# To install plugins: `prefix` + I
# To update plugins:  `prefix` + u

set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'sainnhe/tmux-fzf'

### Open links and files
# https://github.com/tmux-plugins/tmux-open
# set -g @plugin 'tmux-plugins/tmux-open'



# ### 1Password
# set -g @plugin 'yardnsm/tmux-1password'
# set -g @1password-key 'x'
# set -g @1password-vault 'Workfusion'
# set -g @1password-copy-to-clipboard 'on'

# set -g @plugin "arcticicestudio/nord-tmux"
# set -g @plugin 'jatap/tmux-base16-statusline'


# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'dark'
# set -g @tmux-gruvbox 'light'

# Dracula colorscheme https://draculatheme.com/tmux
set -g @plugin 'dracula/tmux'

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, network-ping, weather, time
set -g @dracula-plugins "git"

# set -g @dracula-show-network true
# # dracula: network-ping
# set -g @dracula-ping-server "google.com"
# set -g @dracula-ping-rate 5

# set -g @dracula-show-network-bandwidth true
# set -g @dracula-ram-usage false
# set -g @dracula-cpu-usage true
# set -g @dracula-show-battery false

# available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
# set -g @dracula-[plugin-name]-colors "[background] [foreground]"
set -g @dracula-cpu-usage-colors "pink dark_purple"

# System metrics 

# View
set -g @dracula-show-left-icon session
set -g @dracula-show-powerline false
set -g @dracula-border-contrast true
set -g @dracula-show-right-icon false

set -g @dracula-show-left-sep " | "
# Dracula: time
# set -g @dracula-plugins "time"
# set -g @dracula-day-month false
# set -g @dracula-military-time false
# set -g @dracula-show-timezone false


# Widgets
set -g @dracula-show-weather false
set -g @dracula-show-fahrenheit false


# 127error workaround https://github.com/tmux-plugins/tpm/issues/67
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
